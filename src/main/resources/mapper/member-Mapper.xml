<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 모든 SQL문을 mapper태그 안에 작성 -->
<mapper namespace="memberMapper">
	
	<!-- 회원 -->
	<resultMap type="com.kh.project.member.vo.MemberVO" id="member">
		<id column="ID" 					property="id"/>
		<result column="PW" 				property="pw"/>
		<result column="NAME" 				property="name"/>
		<result column="NICKNAME" 			property="nickName"/>
		<result column="BIRTHDAY" 			property="birthday"/>
		<result column="GENDER" 			property="gender"/>
		<result column="TELL" 				property="tell"/>
		<result column="EMAIL" 				property="email"/>
		<result column="POINT" 				property="point"/>
		<result column="SAVED_MONEY" 		property="savedMoney"/>
		<result column="MARKETING_AGREE" 	property="marketingAgree"/>
		<result column="IS_ADMIN" 			property="isAdmin"/>
		<result column="JOIN_DATE" 			property="joinDate"/>
		<result column="NONPEOPLE_TICKET" 	property="nonpeopleTicket"/>
		<result column="MY_CINEMA" 			property="myCinema"/>
	</resultMap>
	
	<!-- 1. 회원가입하기 -->
	<insert id="join">
		INSERT INTO OISONE_MEMBER(
		    ID
		    , PW
		    , NAME
		    , NICKNAME
		    , BIRTHDAY
		    , GENDER
		    , TELL
		    , EMAIL
		    , MARKETING_AGREE
		    , NONPEOPLE_TICKET
		    , MY_CINEMA

		)VALUES(
		    #{id}
		    , #{pw}
		    , #{name}
		    , #{nickName}
		    , #{birthday}
		    , #{gender}
		    , #{tell}
		    , #{email}
		    , #{marketingAgree}
		    , #{nonpeopleTicket}
		    , #{myCinema}

		)

	</insert>
	
	<!-- ID, NickName 중복확인하기 -->
	<select id="overlapId" resultType="String">
		SELECT ID
		FROM OISONE_MEMBER
		WHERE ID = #{id}
	</select>

	
	<select id="overlapNick" resultType="String">
		SELECT NICKNAME
		FROM OISONE_MEMBER
		WHERE NICKNAME = #{nickName}
	</select>

	<!-- 2. 로그인 -->
	<select id="login" resultMap="member">
		SELECT ID
			, IS_ADMIN
			, NAME
			, NICKNAME
		FROM OISONE_MEMBER
		WHERE ID = #{id}
		AND PW = #{pw}
	</select>
	
	
	<!--3. (admin)멤버 목록 조회 -->
	<select id="selectMemberList" resultMap="member">
		SELECT ID
			, NAME
			, NICKNAME
			, TELL
		FROM OISONE_MEMBER
		ORDER BY JOIN_DATE
	</select>
	
	<!--3. (admin)멤버 상세 조회 -->
	<select id="selectMemberDetail" resultMap="member">
		SELECT ID
			, PW
			, NAME
			, NICKNAME
			, BIRTHDAY
			, GENDER
			, TELL
			, EMAIL
			, POINT
			, SAVED_MONEY
			, MARKETING_AGREE
			, JOIN_DATE
			, NONPEOPLE_TICKET
			, MY_CINEMA
			, ROW_NUM
		FROM
		(
			SELECT ID
				, PW
				, NAME
				, NICKNAME
				, BIRTHDAY
				, GENDER
				, TELL
				, EMAIL
				, POINT
				, SAVED_MONEY
				, MARKETING_AGREE
				, JOIN_DATE
				, NONPEOPLE_TICKET
				, MY_CINEMA
				, ROWNUM AS ROW_NUM
			FROM
			(
				SELECT ID
					, PW
					, NAME
					, NICKNAME
					, TO_CHAR(BIRTHDAY, 'YYYY-MM-DD') AS BIRTHDAY
					, GENDER
					, TELL
					, EMAIL
					, POINT
					, SAVED_MONEY
					, MARKETING_AGREE
					, JOIN_DATE
					, NONPEOPLE_TICKET
					, MY_CINEMA
				FROM OISONE_MEMBER
				<if test="searchValue != null and !searchValue.equals('')">
				WHERE ${searchKeyword} LIKE '%'||#{searchValue}||'%'
				</if>
				ORDER BY JOIN_DATE DESC
			)
		)
		WHERE ROW_NUM &gt;= #{startNum} AND ROW_NUM &lt;= #{endNum}
	</select>
	
</mapper>












